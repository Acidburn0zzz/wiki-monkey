* Make sure to be on the develop branch
* Check that the basic configurations are up to date
* Add to compatibility.py (adapt_configuration function) any new adaptations
  that must be done to the compatibility versions
* Release a new version of Alib if necessary
* Create and ckeckout a VERSION branch
* Run compatibility.py (check for errors)
* Commit and push to the remote repository
* Install all the configurations and check that they work correctly in every
  supported browser
  If they don't work, remove the VERSION branch, commit the fixes in the
  develop branch and re-create the VERSION branch when ready to test again
* Run release.py VERSION ALIB_VERSION (check that the ALIB_VERSION tag exists)
* Run compatibility.py
* Commit
* Checkout the master branch and merge the VERSION branch
* Tag the release commit with the new version number
* Remove the VERSION branch (also remotely if it was pushed)
* Checkout the develop branch
* Run release.py DEVELOP_VERSION
* Run delcompatibility.sh
* Commit
* Push to the remote repository
* Check milestone is closed on GitHub
* Update documentation:
  - GitHub wiki
  - ArchWiki article: https://wiki.archlinux.org/index.php/Wiki_Monkey

NOTES:
* To force merge "theirs" branch: `git merge -X theirs branch`
* To delete a remote branch: `git push origin :tmpbranch`
  or `git push origin :refs/heads/tmpbranch`
